"use strict";(self.webpackChunkgetdeck=self.webpackChunkgetdeck||[]).push([[715],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),b=r,m=d["".concat(s,".").concat(b)]||d[b]||p[b]||i;return n?o.createElement(m,a(a({ref:t},c),{},{components:n})):o.createElement(m,a({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1270:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const i={title:"Beiboot Introduction",sidebar_position:1,description:"What is Getdeck Beiboot and what is it useful for"},a=void 0,l={unversionedId:"index",id:"index",title:"Beiboot Introduction",description:"What is Getdeck Beiboot and what is it useful for",source:"@site/beiboot/index.md",sourceDirName:".",slug:"/",permalink:"/beiboot/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Beiboot Introduction",sidebar_position:1,description:"What is Getdeck Beiboot and what is it useful for"},sidebar:"docsSidebar",next:{title:"Basic Considerations",permalink:"/beiboot/installation/basics"}},s={},u=[{value:"Features",id:"features",level:2},{value:"Kubernetes-in-Kubernetes",id:"kubernetes-in-kubernetes",level:2},{value:"A Local Kubernetes Cluster in the Cloud",id:"a-local-kubernetes-cluster-in-the-cloud",level:2},{value:"Demo",id:"demo",level:2}],c={toc:u};function p(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{class:"text--center"},(0,r.kt)("img",{src:"/img/beiboot-logo.png",alt:"Getdeck Beiboot Logo",width:"500"})),(0,r.kt)("hr",null),(0,r.kt)("b",null,"The Problem"),(0,r.kt)("p",null,"With complex application landscapes, running Kubernetes-based workloads locally becomes infeasible. Swiftly testing applications with different Kubernetes versions can be impossible depending on organizational policies. Spinning up\na Kubernetes cluster with Terraform or Cloud providers takes to long for a convenient development workflow or CI\npipelines."),(0,r.kt)("b",null,"The Solution"),(0,r.kt)("p",null,"With Beiboot you only need one host Kubernetes cluster that runs the Getdeck Beiboot operator. Beiboot creates\nKubernetes clusters as deployments in a matter of seconds. The operator creates several ways to connect to that\ncluster and makes it simple to get started working with Kubernetes."),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Getdeck Beiboot (or just Beiboot for brevity) is a Kubernetes-in-Kubernetes solution. It was born from the idea to provide Getdeck users with a simple yet flexible solution to spin up a hybrid cloud development infrastructure. This is useful for development workloads\nthat grew too large to run on a development machine (or with pony workloads on macOS and Windows machines)."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If you like Beiboot, please give us a \u2b50 star on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Getdeck/beiboot"},"GitHub and support this project"),".")),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("p",null,"Beiboot offers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"to create a fresh ad-hoc Kubernetes cluster in seconds (much faster than Terraform or Cloud-provider)"),(0,r.kt)("li",{parentName:"ul"},"automatic management of Beiboot clusters (via lifetime, inactivity, etc.)"),(0,r.kt)("li",{parentName:"ul"},'shelve ("snapshot") a running Beiboot cluster with state and restore them as often as needed'),(0,r.kt)("li",{parentName:"ul"},"run isolated workloads within Kubernetes; cheap and with the best resource utilization"),(0,r.kt)("li",{parentName:"ul"},"automatic distribution of ",(0,r.kt)("em",{parentName:"li"},"kubeconfig")," and tunnel connection to clients (using the ",(0,r.kt)("em",{parentName:"li"},"Beiboot client package"),")"),(0,r.kt)("li",{parentName:"ul"},"built-in support for ",(0,r.kt)("a",{parentName:"li",href:"https://gefyra.dev"},"Gefyra"))),(0,r.kt)("p",null,"Tested on:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://cloud.google.com/kubernetes-engine"},"Google Kubernetes Engine")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://aws.amazon.com/eks/"},"AWS Elastic Kubernetes Service")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://k3d.io/"},"k3d")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://minikube.sigs.k8s.io/"},"Minikube")," (with Docker driver)")),(0,r.kt)("h2",{id:"kubernetes-in-kubernetes"},"Kubernetes-in-Kubernetes"),(0,r.kt)("p",null,'There are a couple of advantages running a logical ("virtual") Kubernetes cluster running within a physical\nKubernetes cluster. The main focus of Beiboot is the on-demand creation of Kubernetes clusters for development and\ntesting purposes.\nBeiboot has potential for other scenarios, too. For example, strong workload isolation, multi-tenancy, CI, security\nand more.'),(0,r.kt)("p",null,"Beiboot comes with a Kubernetes operator. It handles the management of ad-hoc logical clusters based on the requested\nparameters.\nThis includes the Kubernetes version, the way of exposing the cluster, lifetime and so on."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Beiboot Ops",src:n(549).Z,width:"1064",height:"485"})),(0,r.kt)("h2",{id:"a-local-kubernetes-cluster-in-the-cloud"},"A Local Kubernetes Cluster in the Cloud"),(0,r.kt)("p",null,"Beiboot's client does not only order a cluster based on the given parameters but also establishes a secure connection to it. It makes the requested ports (usually port 80 for ",(0,r.kt)("em",{parentName:"p"},"http"),", port 443 for ",(0,r.kt)("em",{parentName:"p"},"https"),") available on ",(0,r.kt)("em",{parentName:"p"},"localhost"),", effectively making remote services available as they would run on the local machine. That happens entirely automatically using a secured ",(0,r.kt)("em",{parentName:"p"},"mTLS")," connection. This works for any port."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Beiboot client connection",src:n(6894).Z,width:"1394",height:"404"})),(0,r.kt)("h2",{id:"demo"},"Demo"),(0,r.kt)("p",null,"This demo shows the following steps on a GKE host cluster:  "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Install Beiboot  "),(0,r.kt)("li",{parentName:"ol"},"Create a Beiboot cluster with 3 nodes and local port ",(0,r.kt)("em",{parentName:"li"},"8080")," is forwarded to cluster port ",(0,r.kt)("em",{parentName:"li"},"80"),"  "),(0,r.kt)("li",{parentName:"ol"},"Connect to this cluster  "),(0,r.kt)("li",{parentName:"ol"},"Disconnect and remove the Beiboot cluster  ")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Beiboot demo",src:n(9244).Z,width:"1710",height:"672"})))}p.isMDXComponent=!0},6894:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/beiboot-client-connection-759a6466525b09d87d1d90c98babf9ac.png"},549:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/beiboot-ops-3f24458a8e0b8c698b70d6a9f3ca3721.png"},9244:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/beibootctl-demo-bf3e3831d11eefe870335dec3f62487f.gif"}}]);