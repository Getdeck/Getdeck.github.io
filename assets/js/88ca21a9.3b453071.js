"use strict";(self.webpackChunkgetdeck=self.webpackChunkgetdeck||[]).push([[404],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=s(n),d=o,m=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8332:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={title:"Configuration",sidebar_position:4,description:"How to configure Beiboot clusters"},a=void 0,l={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"How to configure Beiboot clusters",source:"@site/beiboot/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/beiboot/configuration",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Configuration",sidebar_position:4,description:"How to configure Beiboot clusters"},sidebar:"docsSidebar",previous:{title:"Beiboot Client",permalink:"/beiboot/client"},next:{title:"Gefyra Integration",permalink:"/beiboot/gefyra"}},c={},s=[{value:"Cluster Request for Deckfile",id:"cluster-request-for-deckfile",level:2},{value:"Usage",id:"usage",level:3},{value:"<code>context</code>",id:"context",level:4},{value:"<code>ports</code>",id:"ports",level:4},{value:"Example <code>cluster</code> Configuration in a Deckfile",id:"example-cluster-configuration-in-a-deckfile",level:4},{value:"Beiboot Cluster Configuration",id:"beiboot-cluster-configuration",level:2},{value:"Editing the Cluster Configuration",id:"editing-the-cluster-configuration",level:3},{value:"Default Configuration Values",id:"default-configuration-values",level:3}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"cluster-request-for-deckfile"},"Cluster Request for Deckfile"),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("p",null,"This section is about specifying a Beiboot cluster from a client using the ",(0,o.kt)("a",{parentName:"p",href:"/docs/deckfile-specs/"},"Deckfile specification"),".\nThe available parameters are currently very limited. They are placed below the ",(0,o.kt)("a",{parentName:"p",href:"/docs/deckfile-specs/#nativeconfig"},(0,o.kt)("inlineCode",{parentName:"a"},"nativeConfig")),"\nkey in a Deckfile."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Important:")," this API and configuration definition is not yet stable and may change at any time."),(0,o.kt)("h4",{id:"context"},(0,o.kt)("inlineCode",{parentName:"h4"},"context")),(0,o.kt)("p",null,"Valid string values for the ",(0,o.kt)("inlineCode",{parentName:"p"},"context")," attribute are: the name of a\n",(0,o.kt)("em",{parentName:"p"},"kubeconfig")," ",(0,o.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/#define-clusters-users-and-contexts"},"cluster context"),".\nThis is the ",(0,o.kt)("em",{parentName:"p"},"kubeconfig")," context which is either active in your current shell (by setting ",(0,o.kt)("inlineCode",{parentName:"p"},"export KUBECONFIG=<path>/<file>.yaml"),")\nor part of your default ",(0,o.kt)("em",{parentName:"p"},"kubeconfig")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.kube/config"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"deck")," CLI will look for that context and activate it for all operations. It will return an error if the specified\ncontext can not be found."),(0,o.kt)("h4",{id:"ports"},(0,o.kt)("inlineCode",{parentName:"h4"},"ports")),(0,o.kt)("p",null,"Valid list values for the ",(0,o.kt)("inlineCode",{parentName:"p"},"ports")," attribute are: a ",(0,o.kt)("inlineCode",{parentName:"p"},"port"),"-object defining a port-mapping.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"port: <local port>:<cluster node port>")," definition allows to specify a port-mapping from a local port to a\nremote port in the cluster. This is useful to make services running in the cluster available on localhost."),(0,o.kt)("h4",{id:"example-cluster-configuration-in-a-deckfile"},"Example ",(0,o.kt)("inlineCode",{parentName:"h4"},"cluster")," Configuration in a Deckfile"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"[...]\n\ncluster:\n  provider: beiboot\n  name: cluster-1\n  nativeConfig:\n    context: <context-to-host-cluster-running-beiboot>\n    ports:\n      - port: 61346:80\n  \n[...]\n")),(0,o.kt)("h2",{id:"beiboot-cluster-configuration"},"Beiboot Cluster Configuration"),(0,o.kt)("h3",{id:"editing-the-cluster-configuration"},"Editing the Cluster Configuration"),(0,o.kt)("p",null,"The Beiboot operator creates a ",(0,o.kt)("em",{parentName:"p"},"ConfigMap")," in its namespace called ",(0,o.kt)("inlineCode",{parentName:"p"},"beiboot-congfig"),". This ",(0,o.kt)("em",{parentName:"p"},"configmap")," contains\nall available configuration parameters to run logical Kubernetes clusters. You can edit the configuration with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl -n getdeck edit cm beiboot-config\n")),(0,o.kt)("p",null,"The operator reads in this ",(0,o.kt)("em",{parentName:"p"},"configmap")," upon each cluster creation. Changes to the ",(0,o.kt)("em",{parentName:"p"},"configmap")," are immediately\neffective for new clusters."),(0,o.kt)("h3",{id:"default-configuration-values"},"Default Configuration Values"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: beiboot-config\n  namespace: getdeck\ndata:\n  apiServerContainerName: \'"apiserver"\'\n  clusterReadyTimeout: "180"\n  gefyra: \'{"enabled": true, "ports": "31820-31920", "endpoint": null}\'\n  k3sImage: \'"rancher/k3s"\'\n  k3sImagePullPolicy: \'"IfNotPresent"\'\n  k3sImageTag: \'"v1.24.3-k3s1"\'\n  kubeconfigFromLocation: \'"/getdeck/kube-config.yaml"\'\n  namespacePrefix: \'"getdeck-bbt"\'\n  nodeLabels: \'{"app": "beiboot", "beiboot": "node"}\'\n  nodeResources: \'{"requests": {"cpu": "0.5", "memory": "512Mi"}, "limits": {}}\'\n  nodeStorageRequests: \'"10Gi"\'\n  nodes: "3"\n  serverLabels: \'{"app": "beiboot", "beiboot": "server"}\'\n  serverResources: \'{"requests": {"cpu": "1", "memory": "512Mi"}, "limits": {}}\'\n  serverStartupTimeout: "60"\n  serverStorageRequests: \'"2Gi"\'\n')))}p.isMDXComponent=!0}}]);