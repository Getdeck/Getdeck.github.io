"use strict";(self.webpackChunkgetdeck=self.webpackChunkgetdeck||[]).push([[404],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=i,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||r;return n?o.createElement(m,a(a({ref:t},u),{},{components:n})):o.createElement(m,a({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8332:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=n(7462),i=(n(7294),n(3905));const r={title:"Configuration",sidebar_position:4,description:"How to configure Beiboot clusters"},a=void 0,l={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"How to configure Beiboot clusters",source:"@site/beiboot/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/beiboot/configuration",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Configuration",sidebar_position:4,description:"How to configure Beiboot clusters"},sidebar:"docsSidebar",previous:{title:"Beiboot Client",permalink:"/beiboot/client"},next:{title:"beibootctl",permalink:"/beiboot/beibootctl"}},s={},c=[{value:"Cluster Request for Deckfile",id:"cluster-request-for-deckfile",level:2},{value:"Usage",id:"usage",level:3},{value:"<code>context</code>",id:"context",level:4},{value:"<code>timeouts</code>",id:"timeouts",level:4},{value:"<code>ports</code>",id:"ports",level:4},{value:"Example <code>cluster</code> Configuration in a Deckfile",id:"example-cluster-configuration-in-a-deckfile",level:4},{value:"Beiboot Cluster Configuration",id:"beiboot-cluster-configuration",level:2},{value:"Editing the Cluster Configuration",id:"editing-the-cluster-configuration",level:3},{value:"Default Configuration Values",id:"default-configuration-values",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"cluster-request-for-deckfile"},"Cluster Request for Deckfile"),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("p",null,"This section is about specifying a Beiboot cluster from a client using the ",(0,i.kt)("a",{parentName:"p",href:"/docs/deckfile-specs/"},"Deckfile specification"),".\nThe available parameters are currently very limited. They are placed below the ",(0,i.kt)("a",{parentName:"p",href:"/docs/deckfile-specs/#nativeconfig"},(0,i.kt)("inlineCode",{parentName:"a"},"nativeConfig")),"\nkey in a Deckfile."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Important:")," this API and configuration definition is not yet stable and may change at any time."),(0,i.kt)("h4",{id:"context"},(0,i.kt)("inlineCode",{parentName:"h4"},"context")),(0,i.kt)("p",null,"Valid string values for the ",(0,i.kt)("inlineCode",{parentName:"p"},"context")," attribute are: the name of a\n",(0,i.kt)("em",{parentName:"p"},"kubeconfig")," ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/#define-clusters-users-and-contexts"},"cluster context"),".\nThis is the ",(0,i.kt)("em",{parentName:"p"},"kubeconfig")," context which is either active in your current shell (by setting ",(0,i.kt)("inlineCode",{parentName:"p"},"export KUBECONFIG=<path>/<file>.yaml"),")\nor part of your default ",(0,i.kt)("em",{parentName:"p"},"kubeconfig")," in ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.kube/config"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"deck")," CLI will look for that context and activate it for all operations. It will return an error if the specified\ncontext can not be found."),(0,i.kt)("h4",{id:"timeouts"},(0,i.kt)("inlineCode",{parentName:"h4"},"timeouts")),(0,i.kt)("p",null,"You can specify the timeouts for the creation of the cluster and the Kubernetes API connection.\nBoth values come with reasonable defaults:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"timeouts:\n  api: 30  # in seconds, defaults to 30\n  cluster: 180  # in seconds, defaults to 180\n")),(0,i.kt)("h4",{id:"ports"},(0,i.kt)("inlineCode",{parentName:"h4"},"ports")),(0,i.kt)("p",null,"Valid list values for the ",(0,i.kt)("inlineCode",{parentName:"p"},"ports")," attribute are: a ",(0,i.kt)("inlineCode",{parentName:"p"},"port"),"-object defining a port-mapping.\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"port: <local port>:<cluster node port>")," definition allows to specify a port-mapping from a local port to a\nremote port in the cluster. This is useful to make services running in the cluster available on localhost."),(0,i.kt)("h4",{id:"example-cluster-configuration-in-a-deckfile"},"Example ",(0,i.kt)("inlineCode",{parentName:"h4"},"cluster")," Configuration in a Deckfile"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"[...]\n\ncluster:\n  provider: beiboot\n  name: cluster-1\n  nativeConfig:\n    context: <context-to-host-cluster-running-beiboot>\n    timeouts:\n     api: 30  # in seconds, defaults to 30\n     cluster: 180  # in seconds, defaults to 180\n    ports:\n      - port: 61346:80\n  \n[...]\n")),(0,i.kt)("h2",{id:"beiboot-cluster-configuration"},"Beiboot Cluster Configuration"),(0,i.kt)("h3",{id:"editing-the-cluster-configuration"},"Editing the Cluster Configuration"),(0,i.kt)("p",null,"The Beiboot operator creates a ",(0,i.kt)("em",{parentName:"p"},"ConfigMap")," in its namespace called ",(0,i.kt)("inlineCode",{parentName:"p"},"beiboot-congfig"),". This ",(0,i.kt)("em",{parentName:"p"},"configmap")," contains\nall available configuration parameters to run logical Kubernetes clusters. You can edit the configuration with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl -n getdeck edit cm beiboot-config\n")),(0,i.kt)("p",null,"The operator reads in this ",(0,i.kt)("em",{parentName:"p"},"configmap")," upon each cluster creation. Changes to the ",(0,i.kt)("em",{parentName:"p"},"configmap")," are immediately\neffective for new clusters."),(0,i.kt)("h3",{id:"default-configuration-values"},"Default Configuration Values"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: beiboot-config\n  namespace: getdeck\ndata:\ndata:\n  clusterReadyTimeout: "180"\n  gefyra: \'{"enabled": true, "endpoint": null}\'\n  k8sVersion: "null"\n  maxLifetime: "null"\n  maxSessionTimeout: "null"\n  namespacePrefix: getdeck-bbt\n  nodeLabels: \'{"app": "beiboot", "beiboot.dev/is-node": "true"}\'\n  nodeResources: \'{"requests": {"cpu": "1", "memory": "1Gi"}, "limits": {}}\'\n  nodeStorageRequests: 1Gi\n  nodes: "1"\n  ports: "null"\n  serverLabels: \'{"app": "beiboot", "beiboot.dev/is-node": "true", "beiboot.dev/is-server":\n    "true"}\'\n  serverResources: \'{"requests": {"cpu": "1", "memory": "1Gi"}, "limits": {}}\'\n  serverStartupTimeout: "60"\n  serverStorageRequests: 1Gi\n  shelfStorageClass: standard-rwo\n  storageClass: standard-rwo\n  tunnel: \'{"enabled": true, "endpoint": null}\'\n\n')))}p.isMDXComponent=!0}}]);